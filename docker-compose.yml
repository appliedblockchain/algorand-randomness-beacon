version: '3.8'

services:
  app:
    hostname: algorand-randomness-beacon-app
    image: appliedblockchain/algorand-randomness-beacon-app:latest
    build:
      context: ./services/app
      dockerfile: ./Dockerfile
    depends_on:
      - vrf
    environment:
      - SERVICE=${SERVICE}
      - NODE_ENV=${NODE_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - ALGOD_TOKEN=${ALGOD_TOKEN}
      - ALGOD_SERVER=${ALGOD_SERVER}
      - ALGOD_PORT=${ALGOD_PORT}
      - APP_CREATOR_ADDRESS=${APP_CREATOR_ADDRESS}
      - APP_ID=${APP_ID}
      - STARTING_ROUND=${STARTING_ROUND}
      - VRF_GRPC_HOST=${VRF_GRPC_HOST}
      - SENTRY_DSN=${SENTRY_DSN}
      - SERVICE_MNEMONIC=${SERVICE_MNEMONIC}
      - SERVICE_ACCOUNT_MINIMUM_BALANCE=${SERVICE_ACCOUNT_MINIMUM_BALANCE}
      - MOST_DISTANT_ROUNDS_ALLOWED=${MOST_DISTANT_ROUNDS_ALLOWED}
      - BLOCK_INTERVAL=${BLOCK_INTERVAL}
      - MAIN_LOOP_INTERVAL=${MAIN_LOOP_INTERVAL}

  vrf:
    hostname: algorand-randomness-beacon-vrf
    image: appliedblockchain/algorand-randomness-beacon-vrf:latest
    build:
      context: ./services/vrf
      dockerfile: ./Dockerfile
    environment:
      - SERVICE=${SERVICE}
      - NODE_ENV=${GIT_HANODE_ENVSH_VERSION}
      - LOG_LEVEL=${LOG_LEVEL}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_KMS_KEY_ID=${AWS_KMS_KEY_ID}
      - VRF_ENCRYPTED_KEY=${VRF_ENCRYPTED_KEY}
      - GRPC_ADDRESS=${GRPC_ADDRESS}
      - GRPC_PORT=${GRPC_PORT}
      - SENTRY_DSN=${SENTRY_DSN}

    ports:
      - "50051:50051"
